// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: countdown/countdown.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Countdown {
  public static partial class CountdownService
  {
    static readonly string __ServiceName = "countdown.CountdownService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.CreateCountdownReq> __Marshaller_countdown_CreateCountdownReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.CreateCountdownReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.CreateCountdownRes> __Marshaller_countdown_CreateCountdownRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.CreateCountdownRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.NextCountdownIntervalByIdReq> __Marshaller_countdown_NextCountdownIntervalByIdReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.NextCountdownIntervalByIdReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.NextCountdownIntervalByIdRes> __Marshaller_countdown_NextCountdownIntervalByIdRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.NextCountdownIntervalByIdRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.QueryCountdownByIdReq> __Marshaller_countdown_QueryCountdownByIdReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.QueryCountdownByIdReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.QueryCountdownByIdRes> __Marshaller_countdown_QueryCountdownByIdRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.QueryCountdownByIdRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.QueryPagedExpringCountdownsByTypeReq> __Marshaller_countdown_QueryPagedExpringCountdownsByTypeReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.QueryPagedExpringCountdownsByTypeReq.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Countdown.QueryPagedExpringCountdownsByTypeRes> __Marshaller_countdown_QueryPagedExpringCountdownsByTypeRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Countdown.QueryPagedExpringCountdownsByTypeRes.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Countdown.CreateCountdownReq, global::Countdown.CreateCountdownRes> __Method_CreateCountdown = new grpc::Method<global::Countdown.CreateCountdownReq, global::Countdown.CreateCountdownRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCountdown",
        __Marshaller_countdown_CreateCountdownReq,
        __Marshaller_countdown_CreateCountdownRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Countdown.NextCountdownIntervalByIdReq, global::Countdown.NextCountdownIntervalByIdRes> __Method_NextCountdownIntervalById = new grpc::Method<global::Countdown.NextCountdownIntervalByIdReq, global::Countdown.NextCountdownIntervalByIdRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NextCountdownIntervalById",
        __Marshaller_countdown_NextCountdownIntervalByIdReq,
        __Marshaller_countdown_NextCountdownIntervalByIdRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Countdown.QueryCountdownByIdReq, global::Countdown.QueryCountdownByIdRes> __Method_QueryCountdownById = new grpc::Method<global::Countdown.QueryCountdownByIdReq, global::Countdown.QueryCountdownByIdRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryCountdownById",
        __Marshaller_countdown_QueryCountdownByIdReq,
        __Marshaller_countdown_QueryCountdownByIdRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Countdown.QueryPagedExpringCountdownsByTypeReq, global::Countdown.QueryPagedExpringCountdownsByTypeRes> __Method_QueryPagedExpringCountdownsByType = new grpc::Method<global::Countdown.QueryPagedExpringCountdownsByTypeReq, global::Countdown.QueryPagedExpringCountdownsByTypeRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryPagedExpringCountdownsByType",
        __Marshaller_countdown_QueryPagedExpringCountdownsByTypeReq,
        __Marshaller_countdown_QueryPagedExpringCountdownsByTypeRes);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Countdown.CountdownReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CountdownService</summary>
    [grpc::BindServiceMethod(typeof(CountdownService), "BindService")]
    public abstract partial class CountdownServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Countdown.CreateCountdownRes> CreateCountdown(global::Countdown.CreateCountdownReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Countdown.NextCountdownIntervalByIdRes> NextCountdownIntervalById(global::Countdown.NextCountdownIntervalByIdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Countdown.QueryCountdownByIdRes> QueryCountdownById(global::Countdown.QueryCountdownByIdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Countdown.QueryPagedExpringCountdownsByTypeRes> QueryPagedExpringCountdownsByType(global::Countdown.QueryPagedExpringCountdownsByTypeReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CountdownService</summary>
    public partial class CountdownServiceClient : grpc::ClientBase<CountdownServiceClient>
    {
      /// <summary>Creates a new client for CountdownService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CountdownServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CountdownService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CountdownServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CountdownServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CountdownServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.CreateCountdownRes CreateCountdown(global::Countdown.CreateCountdownReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCountdown(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.CreateCountdownRes CreateCountdown(global::Countdown.CreateCountdownReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCountdown, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.CreateCountdownRes> CreateCountdownAsync(global::Countdown.CreateCountdownReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCountdownAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.CreateCountdownRes> CreateCountdownAsync(global::Countdown.CreateCountdownReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCountdown, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.NextCountdownIntervalByIdRes NextCountdownIntervalById(global::Countdown.NextCountdownIntervalByIdReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NextCountdownIntervalById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.NextCountdownIntervalByIdRes NextCountdownIntervalById(global::Countdown.NextCountdownIntervalByIdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NextCountdownIntervalById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.NextCountdownIntervalByIdRes> NextCountdownIntervalByIdAsync(global::Countdown.NextCountdownIntervalByIdReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NextCountdownIntervalByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.NextCountdownIntervalByIdRes> NextCountdownIntervalByIdAsync(global::Countdown.NextCountdownIntervalByIdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NextCountdownIntervalById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.QueryCountdownByIdRes QueryCountdownById(global::Countdown.QueryCountdownByIdReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryCountdownById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.QueryCountdownByIdRes QueryCountdownById(global::Countdown.QueryCountdownByIdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryCountdownById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.QueryCountdownByIdRes> QueryCountdownByIdAsync(global::Countdown.QueryCountdownByIdReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryCountdownByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.QueryCountdownByIdRes> QueryCountdownByIdAsync(global::Countdown.QueryCountdownByIdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryCountdownById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.QueryPagedExpringCountdownsByTypeRes QueryPagedExpringCountdownsByType(global::Countdown.QueryPagedExpringCountdownsByTypeReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryPagedExpringCountdownsByType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Countdown.QueryPagedExpringCountdownsByTypeRes QueryPagedExpringCountdownsByType(global::Countdown.QueryPagedExpringCountdownsByTypeReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryPagedExpringCountdownsByType, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.QueryPagedExpringCountdownsByTypeRes> QueryPagedExpringCountdownsByTypeAsync(global::Countdown.QueryPagedExpringCountdownsByTypeReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryPagedExpringCountdownsByTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Countdown.QueryPagedExpringCountdownsByTypeRes> QueryPagedExpringCountdownsByTypeAsync(global::Countdown.QueryPagedExpringCountdownsByTypeReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryPagedExpringCountdownsByType, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CountdownServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CountdownServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CountdownServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCountdown, serviceImpl.CreateCountdown)
          .AddMethod(__Method_NextCountdownIntervalById, serviceImpl.NextCountdownIntervalById)
          .AddMethod(__Method_QueryCountdownById, serviceImpl.QueryCountdownById)
          .AddMethod(__Method_QueryPagedExpringCountdownsByType, serviceImpl.QueryPagedExpringCountdownsByType).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CountdownServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCountdown, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Countdown.CreateCountdownReq, global::Countdown.CreateCountdownRes>(serviceImpl.CreateCountdown));
      serviceBinder.AddMethod(__Method_NextCountdownIntervalById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Countdown.NextCountdownIntervalByIdReq, global::Countdown.NextCountdownIntervalByIdRes>(serviceImpl.NextCountdownIntervalById));
      serviceBinder.AddMethod(__Method_QueryCountdownById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Countdown.QueryCountdownByIdReq, global::Countdown.QueryCountdownByIdRes>(serviceImpl.QueryCountdownById));
      serviceBinder.AddMethod(__Method_QueryPagedExpringCountdownsByType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Countdown.QueryPagedExpringCountdownsByTypeReq, global::Countdown.QueryPagedExpringCountdownsByTypeRes>(serviceImpl.QueryPagedExpringCountdownsByType));
    }

  }
}
#endregion
