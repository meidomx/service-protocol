// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package uniqueidentifier

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// IntegerBasedUniqueIdentifierServiceClient is the client API for IntegerBasedUniqueIdentifierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IntegerBasedUniqueIdentifierServiceClient interface {
	Generate(ctx context.Context, in *GenerateIntegerReq, opts ...grpc.CallOption) (*GenerateIntegerRes, error)
}

type integerBasedUniqueIdentifierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIntegerBasedUniqueIdentifierServiceClient(cc grpc.ClientConnInterface) IntegerBasedUniqueIdentifierServiceClient {
	return &integerBasedUniqueIdentifierServiceClient{cc}
}

func (c *integerBasedUniqueIdentifierServiceClient) Generate(ctx context.Context, in *GenerateIntegerReq, opts ...grpc.CallOption) (*GenerateIntegerRes, error) {
	out := new(GenerateIntegerRes)
	err := c.cc.Invoke(ctx, "/uniqueidentifier.IntegerBasedUniqueIdentifierService/Generate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IntegerBasedUniqueIdentifierServiceServer is the server API for IntegerBasedUniqueIdentifierService service.
// All implementations must embed UnimplementedIntegerBasedUniqueIdentifierServiceServer
// for forward compatibility
type IntegerBasedUniqueIdentifierServiceServer interface {
	Generate(context.Context, *GenerateIntegerReq) (*GenerateIntegerRes, error)
	mustEmbedUnimplementedIntegerBasedUniqueIdentifierServiceServer()
}

// UnimplementedIntegerBasedUniqueIdentifierServiceServer must be embedded to have forward compatible implementations.
type UnimplementedIntegerBasedUniqueIdentifierServiceServer struct {
}

func (UnimplementedIntegerBasedUniqueIdentifierServiceServer) Generate(context.Context, *GenerateIntegerReq) (*GenerateIntegerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Generate not implemented")
}
func (UnimplementedIntegerBasedUniqueIdentifierServiceServer) mustEmbedUnimplementedIntegerBasedUniqueIdentifierServiceServer() {
}

// UnsafeIntegerBasedUniqueIdentifierServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IntegerBasedUniqueIdentifierServiceServer will
// result in compilation errors.
type UnsafeIntegerBasedUniqueIdentifierServiceServer interface {
	mustEmbedUnimplementedIntegerBasedUniqueIdentifierServiceServer()
}

func RegisterIntegerBasedUniqueIdentifierServiceServer(s grpc.ServiceRegistrar, srv IntegerBasedUniqueIdentifierServiceServer) {
	s.RegisterService(&IntegerBasedUniqueIdentifierService_ServiceDesc, srv)
}

func _IntegerBasedUniqueIdentifierService_Generate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateIntegerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntegerBasedUniqueIdentifierServiceServer).Generate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uniqueidentifier.IntegerBasedUniqueIdentifierService/Generate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntegerBasedUniqueIdentifierServiceServer).Generate(ctx, req.(*GenerateIntegerReq))
	}
	return interceptor(ctx, in, info, handler)
}

// IntegerBasedUniqueIdentifierService_ServiceDesc is the grpc.ServiceDesc for IntegerBasedUniqueIdentifierService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IntegerBasedUniqueIdentifierService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "uniqueidentifier.IntegerBasedUniqueIdentifierService",
	HandlerType: (*IntegerBasedUniqueIdentifierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Generate",
			Handler:    _IntegerBasedUniqueIdentifierService_Generate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uniqueidentifier/integerbased.proto",
}
